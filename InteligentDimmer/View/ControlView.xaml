<Window x:Class="InteligentDimmer.View.ControlView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:b="clr-namespace:InteligentDimmer.Behaviours"
        xmlns:local="clr-namespace:InteligentDimmer.View"
        xmlns:controls="clr-namespace:InteligentDimmer.Controls"
        xmlns:validators="clr-namespace:InteligentDimmer.Validators"
        mc:Ignorable="d"
        Title="Control Window" Height="500" Width="700"
        WindowStartupLocation="CenterScreen"      
        DataContext="{Binding ControlViewModel ,Source={StaticResource ViewModelLocator}}"
        Icon="../Resources/sun.ico">
    
    <Window.Background>
        <ImageBrush ImageSource="/Resources/Images/background.png"/>
    </Window.Background>

    <Window.Resources>
        <ResourceDictionary>
            <BitmapImage x:Key="Sun" UriSource="/Resources/Images/sun.png" />
            <Style x:Name="myButtonStyle" x:Key="ButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="#4252e8"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontFamily" Value="Courier"/>
                <Setter Property="FontSize" Value="16"/>
            </Style>
            <Style x:Name="myValidatorStyle" x:Key="ValidatorStyle" 
                   BasedOn="{StaticResource ButtonStyle}" TargetType="Button">
                <Setter Property="IsEnabled" Value="False"/>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=FromHours}" Value="False"/>
                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=FromMinutes}" Value="False"/>
                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=ToHours}" Value="False"/>
                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=ToMinutes}" Value="False"/>
                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=PowerSetter}" Value="False"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="IsEnabled" Value="True"/>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Name="myTextBoxStyle" x:Key="TextBoxStyle" TargetType="TextBox">
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="Width" Value="32"/>
                <Setter Property="MaxLength" Value="2"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="TextAlignment" Value="Center"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip" Value="{Binding RelativeSource=
                            {RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="BorderStyle" TargetType="Border">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="CornerRadius" Value="5"/>
                <Setter Property="Padding" Value="1"/>
            </Style>
            <Style x:Key="LabelStyle" TargetType="Label">
                <Setter Property="Height" Value="40"/>
                <Setter Property="FontFamily" Value="Constantia"/>
                <Setter Property="FontSize" Value="16"/>
            </Style>
            
            <Style x:Key="InfoLabelStyle" TargetType="Label" BasedOn="{StaticResource LabelStyle}" >
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Margin" Value="0,20,0,0"/>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Image Name="SunImage" Source="{StaticResource Sun}" Grid.ColumnSpan="2" Margin="50"
               Opacity="{Binding SliderValue, Converter={StaticResource SliderValueToSunOpacityConverter}}"/>
        <Slider Name="PowerSlider" Grid.Row="0" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="2" 
                Orientation="Vertical" Margin="100,220,100,70" Ticks="0, 25, 50, 75, 100"
                TickPlacement="BottomRight" Value="{Binding SliderValue}"
                Maximum="100"/>
        <Label x:Name="CurrentDeviceLabel" Grid.Column="2" Grid.Row="0" 
               Style="{StaticResource InfoLabelStyle}"/>
        <Label x:Name="CurrentDeviceColonLabel" Grid.Column="2" Grid.Row="0" Style="{StaticResource InfoLabelStyle}"/>
        <Label Content="{Binding SelectedBluetooth.DeviceName}" Name="ChosenDevice"
               Grid.Column="3" Grid.Row="0" Width="200" HorizontalAlignment="Left" 
               Style="{StaticResource InfoLabelStyle}"/>
        <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,40,10,0" 
                    Orientation="Horizontal" HorizontalAlignment="Center">
            <Button Name="IncreasePowerButton" Content="-" Style="{StaticResource ButtonStyle}"
                    Height="30" Width="30" Command="{Binding DecreaseCommand}" />
            <Label Name="DisplayPowerValueLabel" Content="{Binding SliderValue, Converter={StaticResource AddPercetSignToTheValue}}"
                   Foreground="White" Height="30" Width="50" BorderBrush="#4252e8" BorderThickness="1" HorizontalContentAlignment="Center"/>
            <Button Name="DecresePowerButton" Content="+" Style="{StaticResource ButtonStyle}"
                    Height="30" Width="30" Command="{Binding IncreaseCommand}"/>
        </StackPanel>

        <Button Name="MainPowerButton" Content="{Binding TurnModeText}" 
                Style="{StaticResource ButtonStyle}" Command="{Binding PowerDeviceCommand}"
                Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2" Margin="60, 63, 60, 23" Background="#FF4252E8"/>

        <Label Content="{Binding CurrentTime}" Grid.Column="5" Grid.Row="2" Margin="0,0,5,5"
               VerticalAlignment="Bottom" HorizontalAlignment="Right" FontSize="16"/>
        <Label x:Name="SetCurrencyLabel" Grid.Column="3" Grid.ColumnSpan="3"
               HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,50" Style="{StaticResource LabelStyle}"/>
        <StackPanel Grid.Column="3" Grid.ColumnSpan="3" Grid.Row="0" Grid.RowSpan="2"  VerticalAlignment="Center"
                    Margin="0, 0, 30, 0">

            <Grid Height="150" Margin="0,50,0,20" >
                <Border BorderBrush="Black" BorderThickness="1" CornerRadius="5">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <StackPanel Background="White" Opacity="0.5" Grid.RowSpan="3" Grid.ColumnSpan="2" 
                                    Orientation="Horizontal" >
                 
                        </StackPanel>
                        <StackPanel Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Grid.ColumnSpan="2" Orientation="Horizontal" 
                                    Margin="0,0,0,30" HorizontalAlignment="Center" VerticalAlignment="Center" >
                      
                            <Label x:Name="FromLabel" FontSize="18"/>
                            <Border Style="{StaticResource BorderStyle}">
                                <TextBox x:Name="FromHours" Style="{StaticResource TextBoxStyle}" 
                                         Background="{Binding ValidationColor, Converter={StaticResource DefaultBackgroundConverter}}"
                                         b:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text">
                                    <TextBox.Text>
                                        <Binding Path="FromHours" Mode="TwoWay">
                                            <Binding.ValidationRules>
                                                <validators:HoursValidator/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </Border>
                            <Label x:Name="FromColonLabel" FontSize="18"/>
                            <Border Style="{StaticResource BorderStyle}">
                                <TextBox x:Name="FromMinutes" Style="{StaticResource TextBoxStyle}"
                                          Background="{Binding ValidationColor, Converter={StaticResource DefaultBackgroundConverter}}"
                                          b:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text">
                                    <TextBox.Text>
                                        <Binding Path="FromMinutes" Mode="TwoWay" >
                                            <Binding.ValidationRules>
                                                <validators:MinutesValidator/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </Border>
                            <Label x:Name="ToLabel" FontSize="18"/>
                            <Border Style="{StaticResource BorderStyle}">
                                <TextBox x:Name="ToHours" Style="{StaticResource TextBoxStyle}"
                                         b:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text">
                                    <TextBox.Text>
                                        <Binding Path="ToHours" >
                                            <Binding.ValidationRules>
                                                <validators:HoursValidator/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </Border>
                         
                            <Label x:Name="ToColonLabel" FontSize="18"/>
                            <Border Style="{StaticResource BorderStyle}">
                                <TextBox x:Name="ToMinutes" Style="{StaticResource TextBoxStyle}"
                                         b:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text">
                                    <TextBox.Text>
                                        <Binding Path="ToMinutes" >
                                            <Binding.ValidationRules>
                                                <validators:MinutesValidator/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </Border>
                        </StackPanel>
                    
                        <StackPanel Grid.Row="1" Margin="0,12,0,0" HorizontalAlignment="Center">
                            <Button x:Name="NowButton" Margin="70,0,0,0" Width="50"
                                    Style="{StaticResource ButtonStyle}" Command="{Binding GetCurrentTime}"/>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" 
                                    HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Label x:Name="PowerLabel" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Right" Padding="4,4,0,4"/>
                            <Label x:Name="PowerColonLabel" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <Border Style="{StaticResource BorderStyle}">
                                <TextBox x:Name="PowerSetter" Width="60" Style="{StaticResource TextBoxStyle}"
                                     FontSize="16" MaxLength="4"
                                         b:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text">
                                <TextBox.Text>
                                    <Binding Path="SetPower" Converter="{StaticResource AddPercetSignToTheValue}" >
                                        <Binding.ValidationRules>
                                            <validators:SetPowerValidator/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            </Border>
                        </StackPanel>
                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal"
                                    Grid.Row="2" Grid.ColumnSpan="2"
                                    VerticalAlignment="Center">
                            <Label Content="Repeat?" Style="{StaticResource LabelStyle}" VerticalContentAlignment="Center"/>
                            <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding ShouldRepeat}"
                                      Margin="5,0">
                                <CheckBox.LayoutTransform>
                                    <ScaleTransform ScaleX="2" ScaleY="2" />
                                </CheckBox.LayoutTransform>
                            </CheckBox>
                            <Label Content="Days:" Style="{StaticResource LabelStyle}" VerticalContentAlignment="Center"/>
                            <Border Style="{StaticResource BorderStyle}" Height="30">
                                <TextBox x:Name="DaysSetter" Style="{StaticResource TextBoxStyle}" IsEnabled="{Binding ShouldRepeat}" 
                                         b:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text">
                                    <TextBox.Text>
                                        <Binding Path="DaysSetter" >
                                            <Binding.ValidationRules>
                                                <validators:MinutesValidator/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </Border>
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>

            <Button x:Name="SetTimerButton" Style="{StaticResource ValidatorStyle}"
                    Width="100" Height="30" Command="{Binding SetTimeCommand}" />

        </StackPanel>
    </Grid>
</Window>
